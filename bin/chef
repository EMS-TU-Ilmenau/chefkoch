#!/usr/bin/env python
# -*- coding: utf-8 -*-
# PYTHON_ARGCOMPLETE_OK
# https://www.tu-ilmenau.de/it-ems/
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
#  PURPOSE
#  =======
#  A compute cluster cuisine for distributed scientific computing in python.
#
#  Requires: probably quite a few packages
#
#  Author: Christoph Wagner, Sophie Altenburg, Johannes van Reimersdahl
#


if __name__ == '__main__':
    import chefkoch
    import sys
    from arghandler import *
    print(chefkoch.version)

    @subcmd("cook")
    def cmd_cook(*args):
        """This is the header describing the cook method, which is currently
        doing nothing."""
        #if verbose: print(cmd_cook.__doc__)
        print("cook")
        return #something

    @subcmd("check")
    def cmd_check(*args):
        """This is the header describing the check method, which is currently
        doing nothing."""
        print("check")
        return #something

    @subcmd("inspect")
    def cmd_inspect(*args):
        """This is the header describing the inspect method, which is currently
        doing nothing."""
        print("inspect")
        print(*args)
        return #something

    @subcmd("version")
    def cmd_version(*args):
        """This is the header describing the version method, which is currently
        doing something which is returning the version number."""
        print("version")
        return chefkoch.version

    handler = ArgumentHandler(enable_autocompletion = True)
    handler.description = """A compute cluster cuisine for distributed
                            scientific computing in python."""
    handler.add_argument("-v", "--verbose", action = "store_true",
                        default = False,
                        help = "Increase verbosity of text output."
    )
    handler.add_argument("-d", "--debug-level", type = int, default = 0,
                        help = "Set debug level."
    )
    handler.run(sys.argv[1:])
